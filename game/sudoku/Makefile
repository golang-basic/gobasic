### Usage
# make <target>
#
# Targets:
# + all (the default)
#   - This will build all of the dependencies for and link godoku
# + clean
#   - This will delete the binary and the object directory
# + format
#   - This will format all of your source code with gofmt

### Directories and files
# Search/output directories
ROOT  := $(subst " ",\ ,$(GOROOT))
GOBIN := $(subst " ",\ ,$(GOBIN))
OBJDIR = _obj/
TSTDIR = _test/

### Load architecture variables
include $(ROOT)/src/Make.$(GOARCH)

### Compiling and Linking
# Go commands
COMP = $(GOBIN)/$(GC) -I$(OBJDIR)
LINK = $(GOBIN)/$(LD) -L$(OBJDIR)
PACK = $(GOBIN)/gopack grc
GFMT = $(GOBIN)/gofmt -w
TEST = $(GOBIN)/gotest

### Packages and Dependencies
# Package: sudoku
SUDOKU_OBJECT = sudoku
SUDOKU_SOURCE = board.go

# Package: main
MAIN_OBJECT = godoku
MAIN_SOURCE = godoku.go

# Normal Go packages in dependencies-first order
PACKAGES = SUDOKU MAIN

# Go packages that are testable
TESTABLE =

### Aggregates
OBJECTS = $(patsubst %,$(OBJDIR)%.$O,$(foreach PKG,$(PACKAGES),$($(PKG)_OBJECT)))
TSTOBJS = $(patsubst %,$(TSTDIR)%.$O,$(foreach PKG,$(TESTABLE),$($(PKG)_OBJECT)))

### Default rule
all : $(OBJDIR) $(LIBDIR) $(OBJECTS) $(MAIN_OBJECT) $(DLOBJS)

### Main binary
ifdef MAIN_OBJECT
$(MAIN_OBJECT) : $(OBJECTS)
	@echo "  LINK $@"
	@$(LINK) -o $@ $(OBJDIR)$@.$O
endif

### Objects
define package_template
$$(OBJDIR)$$($(1)_OBJECT).$$O: $$($(1)_SOURCE)
	@echo "  COMP $$^"
	@$$(COMP) -o $$@ $$^
	@$$(PACK) $$(@:.$$O=.a) $$@

$$(TSTDIR)$$($(1)_OBJECT).$$O: $$($(1)_SOURCE) $$($(1)_GOTEST)
	@echo "  COMP $$^"
	@$$(COMP) -o $$@ $$^
	@$$(PACK) $$(@:.$$O=.a) $$@
endef
$(foreach PKG,$(filter-out $(CGOPKGS),$(PACKAGES)),$(eval $(call package_template,$(PKG))))

### Testing
test : $(TSTDIR) all $(TSTOBJS)
	@for TEST_TARGET in $(foreach PKG,$(TESTABLE),$($(PKG)_OBJECT)); do echo "  TEST $$TEST_TARGET"; TEST_TARGET=$$TEST_TARGET $(TEST); done
	@rm -rf $O.out _testmain.*

testpackage : $(TSTDIR) $(TSTOBJS)
	@echo -n

testpackage-clean :
	@echo -n

importpath :
	@echo $(TEST_TARGET)

### Utility
clean :
	@echo "  CLEAN"
	@rm -rf $(OBJDIR) $(LIBDIR) $(TSTDIR) *.$(CG1) *.$(CG2) $(CGC) $(CGG) *.o *.$O $O.out _testmain.* $(MAIN_OBJECT)

format :
	@echo "  FORMAT"
	@$(GFMT) $(foreach PKG,$(PACKAGES),$($(PKG)_SOURCE))

$(OBJDIR) $(LIBDIR) $(TSTDIR) :
	@mkdir -p $@

### Makefile automatically generated by godepgen-v1.0.0
